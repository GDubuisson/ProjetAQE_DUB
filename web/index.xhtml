<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:p="http://primefaces.org/ui">
    <h:head>
        <title>Facelet Title</title>
    </h:head>
    <h:body>
        <!-- RELIER LE CODE A UNE BDD
        
        Faire du jsf, afficher quelque chose de la base de données
        Table truc = 2 colonnes -> id et nom
        On met un objet DAO comme variable globale qui permet d'acceder virtuellement aux objets
        On doit faire le lien entre le java et la BDD = faire du mapping (C'EST MAPPING!!)
        EJB : Entreprise Java Bean => genre de static
        Base de données : Aller dans l'onglet services (en haut a gauche) / Clic droit sur bdd "ajouter connexion", choisir la bonne version (mySQL), 
        cliquer sur suivant, mettre les informations de connexion et la bonne base de données. Cliquer sur suivant et ça marche
        Projet => ajouter => autre => persistance => persistance unit
            Dans data source => new data source => choisir nom & connexion BDD qui nous interesse ==> creation de la source de données Auto
        projet => new => autre => persistance => entité class à partir de BDD
        Selectionner la table qui va bien
        Inscrire un nom de package (on l'appelle générallement entity)
        
        projet => new => autre => entreprise Java Bean => session Bean for entity class
        On choisi l'entity qui va bien, verifier que ça va et le mettre dans un package DAO et cocher Local => creation des 3 fichiers (truc, truc facade et truc facade local)
        
        Dans index, on a besoin d'appeler un Bean
        On peut créer auto => Projet => new => autre => JSF managed bean => nom = Vue / package = Web / Scope = session
        
        dans le view.java, on peut taper :
        @EJB
        TrucFacadeLocal trucDAO;
        -> importer le pack trucfacadelocal
        public String getValeur() {
            Truc machin = trucdao.find(1);
            return machin.getNom();
        }
        
        dans l'index : appeler en faisant # {classepackageweb.valeur}
        
        -->
        <p:dataList value="#{vue.all}" var="pit">
            #{pit}
        </p:dataList>
        #{vue.ameKarma} <br/>
        #{vue.ameNom} <br/>
        #{vue.amePrenom}
    </h:body>
</html>

